#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
int arr[100];
int main()
{
 
  int child=0;
  int parent=0;
  int total=0;
  pid_t pid=-1;
  //array initializtion for number 100
  for(int w=0;w<100;w++)
  {
   arr[w]=w+1;
  }
  for(int i=0;i<2;i++)
  { 
    if(i==1)
    { parent=0;child=0;}
    pid =fork();
    if( pid == 0 )
    {
     printf("i am child number %d and my pid is : %d \n",i+1,getpid());    
     if(1==0)
     {
      for(int b=0;b<25;b++)
      {
       child+=arr[b];
      }
     }
     if(1==1)
     {
      for(int b=50;b<75;b++)
      {
       child+=arr[b];
      }
     }
     printf("child %d task child result is :%d \n",i+1,child);  
     total+=(child);
     printf("child %d task childtotal result is :%d \n",i+1,total); 
    }
    else if( pid == -1)
    { 
     printf("fail to forking ....\n");
     exit(0);
    }
    else
    {
     printf("i am parent of child %d my pid is :%d-- my child will be : %d\n",i+1,getpid(),pid);
     if(i==0)
     { 
      for(int a=25;a<50;a++)
      {
       parent+=arr[a];
      }
     }
     if(i==1)
      {
       for(int a=75;a<100;a++)
       {
        parent+=arr[a];
       }
      }
     printf("parent %d task parent result is :%d \n",i+1,parent);     
     total+=parent;
     printf("parent %d task parenttotal result is :%d \n",i+1,total);     
    }
 if(i==1){total+=total;}
  }
  sleep(1);
  printf("task total result is :%d\n",total);     
  return 0;
}
